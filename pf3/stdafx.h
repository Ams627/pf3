// AMS - This program was generated by pg15.exe

#define _WIN32_WINNT 0x801
// add the winsock2 headers - they MUST go before windows.h
#define _WINSOCK_DEPRECATED_NO_WARNINGS
#include <WinSock2.h>
#include <ws2tcpip.h>
#include <mswsock.h>
// The IP helper API:
#include <IPHlpApi.h>

// don't display warning at dbghelp.h lines 1544, and 3190 (c:\program files (x86)\windows kits\8.1\include\um\dbghelp.h):
#pragma warning(disable : 4091)
#include <winsock.h>
#include <windows.h>
#include <cstdint>
#include <cassert>
#include <array>
#include <vector>
#include <queue>
#include <deque>
#include <iostream>
#include <fstream>
#include <sstream>
#include <iomanip>
#include <sstream>
#include <algorithm>
#include <iterator>
#include <map>
#include <set>
#include <unordered_map>
#include <unordered_set>
#include <functional>
#include <memory>
#include <string>

// for s suffix for std::string literals:
using namespace std::literals::string_literals;

// basic exception handler class:
struct QException : public std::exception
{
    QException(std::string msg) : std::exception(msg.c_str()) {}
    QException(char *msg) : std::exception(msg) {}
    virtual ~QException() {}
};

// this project only:
#include <ams/rjis/stationcode.h>
#include <ams/rjis/othercodes.h>
#include <ams/rjis/rjisdate.h>
#include <ams/utility.h>

// we use tinyXML in this project for reading configuration and IDMS data

// Note - BE SURE TO SET LIB FOLDER CORRECTLY (AMS):
// something like:
// b:\users\adrian\cpp\lib\$(PlatformTarget)\$(Configuration)
//
#define TIXML_USE_STL
#include <ams/tinyxml.h>
#pragma comment(lib,"tinyxmlstl.lib")



